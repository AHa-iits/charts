traefik:
  globalArguments:
    - "--global.checknewversion"
  additionalArguments:
    - "--ping"
  logs:
    general:
      format: json
      level: INFO
    access:
      format: json
      enabled: false
  deployment:
    replicas: 2

  service:
    spec:
      externalTrafficPolicy: Cluster

  providers:
    kubernetesCRD:
      enabled: true
      allowExternalNameServices: true
      allowCrossNamespace: true
    kubernetesIngress:
      enabled: true
      allowExternalNameServices: true
      publishedService:
        enabled: true

  ingressClass:
    enabled: true
    isDefaultClass: true

  ports:
    web:
      redirectTo:
        port: websecure

  tlsOptions:
    default:
      minVersion: VersionTLS13
  tlsStore:
    default:
      defaultCertificate:
        secretName: "traefik-default-cert"

  metrics:
    prometheus:
      serviceMonitor:
        enabled: true
      service:
        enabled: true
  ingressRoute:
    dashboard:
      entryPoints:
        - traefik
        - websecure
      middlewares:
        - name: admin-forward-auth
          namespace: routing
    healthcheck:
      enabled: true
      entryPoints:
        - traefik
        - websecure

defaultCert:
  enabled: true
  # -- (array) Required, set the domains you want to request, i.e.
  #  dnsNames:
  #  - "dev.example.com" # Required if you also want to serve on the "root" url
  #  - "*.dev.example.com" # If you want wildcard certificates, you have to do an DNS01 Request for the certificate
  dnsNames:

  # -- Defaults are 'letsencrypt' for HTTP01 and 'letsencrypt-dns' for DNS01
  # For wildcard-certificates you need to use the DNS01 Challenge
  issuerName: "letsencrypt-dns"

podMonitor:
  enabled: true
  #labels: {}
  #annotations: {}
  port: "metrics"
  interval: "10s"
  path: "/metrics"
