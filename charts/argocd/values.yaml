argo-cd:
  global:
    # -- Required, which domain do you want to serve argocd from? i.e. admin.example.com (ignoring path)
    domain: "SET_BY_TERRAFORM"
  controller:
    replicas: 2
    env:
      - name: "TZ"
        value: "Europe/Berlin"
      - name: "ARGOCD_GPG_ENABLED"
        value: "false"
    logFormat: "json"
  crds:
    install: true
  dex:
    env:
      - name: "TZ"
        value: "Europe/Berlin"
      - name: "ARGOCD_GPG_ENABLED"
        value: "false"
    logFormat: "json"
  notifications:
    enabled: false
  repoServer:
    env:
      - name: "TZ"
        value: "Europe/Berlin"
      - name: "ARGOCD_GPG_ENABLED"
        value: "false"
    logFormat: "json"
    containerSecurityContext:
      seccompProfile:
        type: Unconfined
  server:
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
      path: "/argocd"
    env:
      - name: "TZ"
        value: "Europe/Berlin"
      - name: "ARGOCD_GPG_ENABLED"
        value: "false"
    logFormat: json

  configs:
    rbac:
      create: true
      policy.csv: |
        g, ARGOCD-ADMIN, role:admin
        g, SYSTEM-ADMINISTRATOR, role:admin
      oidc.config: |
        name: OIDC
        issuer: $ARGOCD_OIDC_URL
        clientID: $ARGOCD_OIDC_CLIENT_ID
        clientSecret: $ARGOCD_OIDC_CLIENT_SECRET
        requestedScopes:
          - openid
          - profile
          - email
          - groups
        requestedIDTokenClaims:
          groups:
            essential: true
    cm:
      resource.customizations: |
        # Ignores .data changes of all secrets with a vaultInjectionChecksum annotation
        argoproj.io/Application:
         ignoreDifferences: |
            jqPathExpressions:
              - '. | select(.metadata.annotations.parametersChecksum) | .spec.source.helm'
              - '. | select(.metadata.annotations.valueFileChecksum) | .spec.source.helm'
        # Ignores caBundle and template changes of the following resources
        admissionregistration.k8s.io/MutatingWebhookConfiguration:
          ignoreDifferences: |
            jqPathExpressions:
              - .metadata.annotations.template
              - '.webhooks'
        apiextensions.k8s.io/CustomResourceDefinition:
          ignoreDifferences: |
            jqPathExpressions:
              - .spec.conversion.webhookClientConfig.caBundle
        admissionregistration.k8s.io/ValidatingWebhookConfiguration:
          ignoreDifferences: |
            jqPathExpressions:
              - .metadata.annotations.template
              - '.webhooks[]?.clientConfig.caBundle'
              - '.webhooks'
        cert-manager.io/Certificate:
          ignoreDifferences: |
            jqPathExpressions:
              - .spec.duration
        networking.k8s.io/Ingress:
          health.lua: |
            hs = {}
            hs.status = "Healthy"
            return hs
    params:
      server.basehref: "/argocd"
      server.rootpath: "/argocd"

    secret:
      extra:
        ARGOCD_OIDC_URL: "SET_BY_TERRAFORM"
        ARGOCD_OIDC_CLIENT_ID: "SET_BY_TERRAFORM"
        ARGOCD_OIDC_CLIENT_SECRET: "SET_BY_TERRAFORM"

# -- List of projects which you want to bootstrap
projects:
## bootstraps infrastructure related charts like traefik, elastic-stack...
#  infrastructure-charts:
## values which are handed over to the infrastructure-charts project like this you can for example give over information from terraform to argocd
#    projectValues:
#      # Set this to enable stage values.yaml
#      stage:
#    # defaults to false
#    serverSideApply:
#    # information about the git repo which should be bootstrapped
#    git:
#      # defaults to ARGOCD_GIT_ACCESS_TOKEN
#      username:
#      password: "SET_BY_TERRAFORM"
#      repoUrl: "SET_BY_TERRAFORM"
#      # defaults to main
#      branch:
#      # defaults to project name
#      path:
#      repoPrivateKeyBase64Encoded:
#
#    # helm registries credentials
#    helmRegistries:
#      infraRegistry:
#        # defaults to map key
#        name: ""
#        password: "SET_BY_TERRAFORM"
#        url: "SET_BY_TERRAFORM"
#        # defaults to ARGOCD_GIT_ACCESS_TOKEN
#        username:
#
#    # defaults to *
#    allowedUrls: